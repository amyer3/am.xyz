{"ast":null,"code":"import _slicedToArray from \"/Users/Alex/WebstormProjects/am.xyz/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/Alex/WebstormProjects/am.xyz/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Alex/WebstormProjects/am.xyz/frontend/src/views/Home.js\";\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  display: none;\\n  @media \", \" {\\n    height: 80%;\\n    margin: auto;\\n    display: block;\\n  }\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  margin: 0;\\n  padding: 0;\\n  grid-template-columns: 30% 5% 30% 5% 30%;\\n  grid-template-rows: 25% 25%;\\n  grid-row-gap: 10%;\\n  grid-template-areas:\\n    \\\"li s1 gh s2 ct\\\"\\n    \\\"photo photo photo s2 map\\\";\\n  grid-area: buttons;\\n  justify-items: center;\\n\\n  @media \", \" {\\n    grid-template-columns: 40% 10% 40% 10%;\\n    grid-template-rows: 35% 35%;\\n    grid-template-areas:\\n      \\\"li cs gh rs\\\"\\n      \\\"ct cs wa rs\\\";\\n    grid-row-gap: 10%;\\n  }\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n    border: 3px solid white;\\n    border-radius: 10px;\\n    display: {props => props.hide ? \\\"none\\\" : \\\"inline-block\\\"};\\n    color: white;\\n    background-color: transparent;\\n    \\n    font-size: 26pt;\\n    font-family: 'ABeeZee', Serif;\\n    grid-area: \", \";\\n    width: 100%;\\n    text-align: center;\\n    text-decoration: none;\\n    outline: 0;\\n    vertical-align: middle;\\n    line-height: 50px;\\n    max-height: 50px;\\n    }\\n\\n    @media \", \"{\\n        :before{\\n        content: '\", \"';\\n        \\n    }\\n    @media \", \" {\\n        max-height: 100rem;\\n        line-height: 100%;\\n        display: flex;\\n    }\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  display: inline-grid;\\n  grid-template-columns: 8vw 52vw;\\n  grid-template-rows: 5vh 10vh 55vh 35vh;\\n  grid-template-areas:\\n    \\\"cs toggle\\\"\\n    \\\"cs space\\\"\\n    \\\"cs words\\\"\\n    \\\"cs buttons\\\";\\n  @media \", \" {\\n    grid-template-columns: 8vw 92vw;\\n    grid-template-rows: 10vh 45vh 45vh;\\n    grid-template-areas:\\n      \\\"cs toggle\\\"\\n      \\\"cs words\\\"\\n      \\\"cs buttons\\\";\\n  }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 42pt;\\n  padding: 0;\\n  color: white;\\n  font-family: \\\"ABeeZee\\\", Serif;\\n  @media \", \" {\\n    font-size: 22pt;\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  line-height: 100%;\\n  padding: 0;\\n  width: 50vw;\\n  display: inline-block;\\n  grid-area: words;\\n  @media \", \" {\\n    width: auto;\\n    align-self: center;\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: \", \"pt;\\n  padding: 0;\\n  margin: 0;\\n  transition: font-size 0.5s;\\n  width: 1.5vw;\\n  text-align: center;\\n  @media \", \" {\\n    width: 6.5vw;\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  color: white;\\n  font-family: \\\"ABeeZee\\\", Serif;\\n  padding: 0;\\n  width: 10vw;\\n  text-align: left;\\n  grid-area: toggle;\\n  cursor: pointer;\\n  display: flex;\\n  align-self: center;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 100vh;\\n  width: auto;\\n  float: right;\\n  @media \", \" {\\n    display: none;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: #0d1836;\\n  width: 100vw;\\n  height: 100vh;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport cut from \"../assets/cut.svg\";\nimport { Link } from \"react-router-dom\";\n/* import assets for use later on */\n\nimport whatsapp from \"../assets/004-whatsapp.svg\";\nimport github from \"../assets/001-github.svg\";\nimport linkedin from \"../assets/002-linkedin.svg\";\nimport email from \"../assets/003-telegram.svg\";\n/*\nUse this to pull all photos from a folder, and make an array from them\nfunction importAll(r) {\n    return r.keys().map(r);\n}\nconst images = importAll(require.context('./assets/photos/', false, /\\.(png|jpe?g|svg)$/));\n\n    @media  ${widthRule} {\n        background-color: red;\n    }\n\n*/\n\nvar widthRule = \"(max-width: 768px)\";\nvar notWidthRule = \"(min-width: 767px)\";\nvar BackgroundDiv = styled.div(_templateObject());\nvar CutImage = styled.img(_templateObject2(), widthRule);\nvar LangToggle = styled.div(_templateObject3());\nvar LangP = styled.div(_templateObject4(), function (props) {\n  return props.size;\n}, widthRule);\nvar Words = styled.div(_templateObject5(), widthRule);\nvar InlinePara = styled.p(_templateObject6(), widthRule);\nvar Grid = styled.div(_templateObject7(), widthRule); // add max-width: 200px;\n\nvar LinkButton = styled(Link)(_templateObject8(), function (props) {\n  return props.area;\n}, notWidthRule, function (props) {\n  return props.buttonText ? props.buttonText : false;\n}, widthRule);\nvar ButtonGrid = styled.div(_templateObject9(), widthRule);\nvar ButtonImg = styled.img(_templateObject10(), widthRule);\nexport default function Home() {\n  var initState = window.navigator.language.includes(\"en\") ? 1 : 0;\n\n  var _useState = useState(initState),\n      _useState2 = _slicedToArray(_useState, 2),\n      en = _useState2[0],\n      changeLang = _useState2[1];\n\n  var handleChange = function handleChange() {\n    return changeLang(!en);\n  };\n\n  var isMobileDevice = function isMobileDevice() {\n    return typeof window.orientation !== \"undefined\" || navigator.userAgent.indexOf(\"IEMobile\") !== -1 || window.innerWidth <= 768;\n  };\n\n  var ButtonBody = [React.createElement(LinkButton, {\n    to: \"https://linkedin.com\",\n    area: \"li\",\n    buttonText: \"LinkedIn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(ButtonImg, {\n    src: linkedin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  })), React.createElement(LinkButton, {\n    to: \"https://github.com/amyer3\",\n    area: \"gh\",\n    buttonText: \"Github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(ButtonImg, {\n    src: github,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  })), React.createElement(LinkButton, {\n    to: \"mailto:\".concat(process.env.REACT_APP_EMAIL),\n    area: \"ct\",\n    buttonText: en ? \"Contact\" : \"Contactez\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(ButtonImg, {\n    src: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  })), React.createElement(LinkButton, {\n    to: '/p',\n    area: \"photo\",\n    buttonText: \"Photography\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), React.createElement(LinkButton, {\n    to: \"/m\",\n    area: \"map\",\n    buttonText: \"Travel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  })];\n  var WhatsAppButton = React.createElement(LinkButton, {\n    to: process.env.REACT_APP_PHONE_NUMB,\n    area: \"wa\",\n    hide: isMobileDevice() ? \"\" : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(ButtonImg, {\n    src: whatsapp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }));\n\n  if (isMobileDevice()) {\n    ButtonBody.push(WhatsAppButton);\n  }\n\n  return React.createElement(BackgroundDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(LangToggle, {\n    onClick: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(LangP, {\n    size: en ? 14 : 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"EN\"), React.createElement(LangP, {\n    size: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"|\"), React.createElement(LangP, {\n    size: en ? 12 : 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"FR\")), React.createElement(Words, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(InlinePara, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(\"u\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"Alex\")), React.createElement(InlinePara, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, en ? \"Strategy\" : \"Stratégie\", \".\"), React.createElement(InlinePara, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, en ? \"Engineering\" : \"Ingénierie\", \".\"), React.createElement(InlinePara, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, en ? \"Nearly edible baking\" : \"Presque comestible pain\", \".\")), React.createElement(ButtonGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, ButtonBody)), React.createElement(CutImage, {\n    src: cut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/Alex/WebstormProjects/am.xyz/frontend/src/views/Home.js"],"names":["React","useState","styled","Link","widthRule","notWidthRule","BackgroundDiv","div","CutImage","img","LangToggle","LangP","props","size","Words","InlinePara","p","Grid","LinkButton","area","buttonText","ButtonGrid","ButtonImg","Home","initState","window","navigator","language","includes","en","changeLang","handleChange","isMobileDevice","orientation","userAgent","indexOf","innerWidth","ButtonBody","linkedin","github","process","env","REACT_APP_EMAIL","email","WhatsAppButton","REACT_APP_PHONE_NUMB","whatsapp","push","cut"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport cut from \"../assets/cut.svg\";\nimport { Link } from \"react-router-dom\";\n\n/* import assets for use later on */\nimport whatsapp from \"../assets/004-whatsapp.svg\";\nimport github from \"../assets/001-github.svg\";\nimport linkedin from \"../assets/002-linkedin.svg\";\nimport email from \"../assets/003-telegram.svg\";\n/*\nUse this to pull all photos from a folder, and make an array from them\nfunction importAll(r) {\n    return r.keys().map(r);\n}\nconst images = importAll(require.context('./assets/photos/', false, /\\.(png|jpe?g|svg)$/));\n\n    @media  ${widthRule} {\n        background-color: red;\n    }\n\n*/\nconst widthRule = \"(max-width: 768px)\";\nconst notWidthRule = \"(min-width: 767px)\";\n\nconst BackgroundDiv = styled.div`\n  background-color: #0d1836;\n  width: 100vw;\n  height: 100vh;\n`;\nconst CutImage = styled.img`\n  height: 100vh;\n  width: auto;\n  float: right;\n  @media ${widthRule} {\n    display: none;\n  }\n`;\nconst LangToggle = styled.div`\n  color: white;\n  font-family: \"ABeeZee\", Serif;\n  padding: 0;\n  width: 10vw;\n  text-align: left;\n  grid-area: toggle;\n  cursor: pointer;\n  display: flex;\n  align-self: center;\n`;\n\nconst LangP = styled.div`\n  font-size: ${props => props.size}pt;\n  padding: 0;\n  margin: 0;\n  transition: font-size 0.5s;\n  width: 1.5vw;\n  text-align: center;\n  @media ${widthRule} {\n    width: 6.5vw;\n  }\n`;\n\nconst Words = styled.div`\n  line-height: 100%;\n  padding: 0;\n  width: 50vw;\n  display: inline-block;\n  grid-area: words;\n  @media ${widthRule} {\n    width: auto;\n    align-self: center;\n  }\n`;\n\nconst InlinePara = styled.p`\n  font-size: 42pt;\n  padding: 0;\n  color: white;\n  font-family: \"ABeeZee\", Serif;\n  @media ${widthRule} {\n    font-size: 22pt;\n  }\n`;\nconst Grid = styled.div`\n  display: inline-grid;\n  grid-template-columns: 8vw 52vw;\n  grid-template-rows: 5vh 10vh 55vh 35vh;\n  grid-template-areas:\n    \"cs toggle\"\n    \"cs space\"\n    \"cs words\"\n    \"cs buttons\";\n  @media ${widthRule} {\n    grid-template-columns: 8vw 92vw;\n    grid-template-rows: 10vh 45vh 45vh;\n    grid-template-areas:\n      \"cs toggle\"\n      \"cs words\"\n      \"cs buttons\";\n  }\n`;\n// add max-width: 200px;\nconst LinkButton = styled(Link)`\n    border: 3px solid white;\n    border-radius: 10px;\n    display: {props => props.hide ? \"none\" : \"inline-block\"};\n    color: white;\n    background-color: transparent;\n    \n    font-size: 26pt;\n    font-family: 'ABeeZee', Serif;\n    grid-area: ${props => props.area};\n    width: 100%;\n    text-align: center;\n    text-decoration: none;\n    outline: 0;\n    vertical-align: middle;\n    line-height: 50px;\n    max-height: 50px;\n    }\n\n    @media ${notWidthRule}{\n        :before{\n        content: '${props => (props.buttonText ? props.buttonText : false)}';\n        \n    }\n    @media ${widthRule} {\n        max-height: 100rem;\n        line-height: 100%;\n        display: flex;\n    }\n`;\n\nconst ButtonGrid = styled.div`\n  display: grid;\n  margin: 0;\n  padding: 0;\n  grid-template-columns: 30% 5% 30% 5% 30%;\n  grid-template-rows: 25% 25%;\n  grid-row-gap: 10%;\n  grid-template-areas:\n    \"li s1 gh s2 ct\"\n    \"photo photo photo s2 map\";\n  grid-area: buttons;\n  justify-items: center;\n\n  @media ${widthRule} {\n    grid-template-columns: 40% 10% 40% 10%;\n    grid-template-rows: 35% 35%;\n    grid-template-areas:\n      \"li cs gh rs\"\n      \"ct cs wa rs\";\n    grid-row-gap: 10%;\n  }\n`;\nconst ButtonImg = styled.img`\n  display: none;\n  @media ${widthRule} {\n    height: 80%;\n    margin: auto;\n    display: block;\n  }\n`;\n\n\nexport default function Home() {\n  const initState = window.navigator.language.includes(\"en\") ? 1 : 0;\n  const [en, changeLang] = useState(initState);\n\n  var handleChange = () => changeLang(!en);\n\n  var isMobileDevice = () =>\n    typeof window.orientation !== \"undefined\" ||\n    navigator.userAgent.indexOf(\"IEMobile\") !== -1 ||\n    window.innerWidth <= 768;\n\n    var ButtonBody = [\n    <LinkButton\n            to={\"https://linkedin.com\"}\n            area={\"li\"}\n            buttonText={\"LinkedIn\"}\n          >\n            <ButtonImg src={linkedin} />\n          </LinkButton>,\n\n          <LinkButton\n            to={\"https://github.com/amyer3\"}\n            area={\"gh\"}\n            buttonText={\"Github\"}\n          >\n            <ButtonImg src={github} />\n          </LinkButton>,\n\n          <LinkButton\n            to={`mailto:${process.env.REACT_APP_EMAIL}`}\n            area={\"ct\"}\n            buttonText={en ? \"Contact\" : \"Contactez\"}\n          >\n            <ButtonImg src={email} />\n        </LinkButton>,\n\n        <LinkButton \n            to={'/p'}\n            area={\"photo\"} \n            buttonText={\"Photography\"} \n        />,\n\n          <LinkButton \n            to={\"/m\"}\n            area={\"map\"} \n            buttonText={\"Travel\"} \n        />\n]\n\n        var WhatsAppButton = <LinkButton\n                        to={process.env.REACT_APP_PHONE_NUMB}\n                        area={\"wa\"}\n                        hide={isMobileDevice() ? \"\" : true}\n                        >\n                        <ButtonImg src={whatsapp} />\n                    </LinkButton>\n\nif(isMobileDevice()){ ButtonBody.push(WhatsAppButton) }\n\n\n  return (\n    <BackgroundDiv>\n      <Grid>\n        <LangToggle onClick={handleChange}>\n          <LangP size={en ? 14 : 12}>EN</LangP>\n          <LangP size={14}>|</LangP>\n          <LangP size={en ? 12 : 14}>FR</LangP>\n        </LangToggle>\n\n        <Words>\n          <InlinePara>\n            <u>Alex</u>\n          </InlinePara>\n          <InlinePara>{en ? \"Strategy\" : \"Stratégie\"}.</InlinePara>\n          <InlinePara>{en ? \"Engineering\" : \"Ingénierie\"}.</InlinePara>\n          <InlinePara>\n            {en ? \"Nearly edible baking\" : \"Presque comestible pain\"}.\n          </InlinePara>\n        </Words>\n\n        <ButtonGrid>\n        {ButtonBody}\n\n\n\n          \n\n        </ButtonGrid>\n      </Grid>\n\n      <CutImage src={cut} />\n    </BackgroundDiv>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}