{"ast":null,"code":"var _jsxFileName = \"/Users/Alex/WebstormProjects/am.xyz/frontend/src/globe/Globe.js\";\nimport React from 'react';\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker } from \"react-simple-maps\";\nimport paths from './paths.json';\nimport sf from \"../assets/icons/travel/sf.svg\";\nconst wrapperStyles = {\n  width: \"100%\",\n  maxWidth: 980,\n  margin: \"0 auto\",\n  textDecoration: 'none',\n  backgroundColor: '#78D2FA'\n};\nconst places = [{\n  name: \"SF\",\n  coordinates: [-122.4599, 37.7400],\n  markerOffset: -15\n}, {\n  name: \"Chicago\",\n  coordinates: [-87.75005, 41.8299],\n  markerOffset: -15\n}, {\n  name: \"Melbourne\",\n  coordinates: [144.9750, -37.8200],\n  markerOffset: 25\n}, {\n  name: \"LA\",\n  coordinates: [-118.1799, 33.9899],\n  markerOffset: 15\n}, {\n  name: \"New York\",\n  coordinates: [-73.98001, 40.7499],\n  markerOffset: 15\n}, {\n  name: \"Sydney\",\n  coordinates: [151.1851, -33.920010],\n  markerOffset: -15\n}, {\n  name: \"Hong Kong\",\n  coordinates: [114.18500, 22.3049],\n  markerOffset: 15\n}, {\n  name: \"Seattle\",\n  coordinates: [-122.3351, 47.6080],\n  markerOffset: -15\n}, {\n  name: \"Cancun\",\n  coordinates: [-86.8515, 21.1619],\n  markerOffset: -10\n}, {\n  name: \"London\",\n  coordinates: [0.1278, 51.5074],\n  markerOffset: -15\n}, {\n  name: \"Paris\",\n  coordinates: [2.3522, 48.8566],\n  markerOffset: 15\n}, {\n  name: \"MontrÃ©al\",\n  coordinates: [-73.5673, 45.5017],\n  markerOffset: -15\n}];\nconst earthStyle = {\n  fill: '#A5DC69'\n};\nexport default class Globe extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      style: wrapperStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(ComposableMap, {\n      projectionConfig: {\n        scale: 205,\n        rotation: [-11, 0, 0]\n      },\n      width: 980,\n      height: 551,\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(ZoomableGroup, {\n      center: [0, 20],\n      disablePanning: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Geographies, {\n      geography: paths,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, (geographies, projection) => geographies.map((geography, i) => geography.id !== \"ATA\" && React.createElement(Geography, {\n      key: i,\n      geography: geography,\n      projection: projection,\n      style: {\n        default: {\n          fill: \"#A5DC69\",\n          stroke: \"#607D8B\",\n          strokeWidth: 3,\n          outline: \"none\"\n        },\n        hover: {\n          fill: \"#A5DC69\",\n          stroke: \"#607D8B\",\n          strokeWidth: 3,\n          outline: \"none\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(Markers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, places.map((marker, i) => React.createElement(Marker, {\n      key: i,\n      marker: marker,\n      src: sf,\n      style: {\n        default: {\n          fill: \"red\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"g\", {\n      transform: \"translate(-12, -24)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"none\",\n      strokeWidth: \"2\",\n      strokeLinecap: \"square\",\n      strokeMiterlimit: \"10\",\n      strokeLinejoin: \"miter\",\n      d: \"M20,9c0,4.9-8,13-8,13S4,13.9,4,9c0-5.1,4.1-8,8-8S20,3.9,20,9z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"circle\", {\n      fill: \"none\",\n      strokeWidth: \"2\",\n      strokeLinecap: \"square\",\n      strokeMiterlimit: \"10\",\n      strokeLinejoin: \"miter\",\n      cx: \"12\",\n      cy: \"9\",\n      r: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"text\", {\n      textAnchor: \"middle\",\n      y: marker.markerOffset,\n      style: {\n        fontFamily: \"Roboto, sans-serif\",\n        fill: \"white\",\n        backgroundColor: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, marker.name)))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Alex/WebstormProjects/am.xyz/frontend/src/globe/Globe.js"],"names":["React","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","paths","wrapperStyles","width","maxWidth","margin","textDecoration","backgroundColor","places","name","coordinates","markerOffset","earthStyle","fill","Globe","Component","render","scale","rotation","height","geographies","projection","map","geography","i","id","default","stroke","strokeWidth","outline","hover","marker","sf","fontFamily"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    ComposableMap,\n    ZoomableGroup,\n    Geographies,\n    Geography,\n    Markers,\n    Marker\n} from \"react-simple-maps\"\nimport paths from './paths.json'\nimport sf from '../assets/icons/travel/sf.svg'\n\n\nconst wrapperStyles = {\n    width: \"100%\",\n    maxWidth: 980,\n    margin: \"0 auto\",\n    textDecoration: 'none',\n    backgroundColor: '#78D2FA'\n}\nconst places = [\n    {name: \"SF\", coordinates: [-122.4599, 37.7400], markerOffset: -15},\n    {name: \"Chicago\", coordinates: [-87.75005, 41.8299], markerOffset: -15},\n    {name: \"Melbourne\", coordinates: [144.9750, -37.8200], markerOffset: 25},\n    {name: \"LA\", coordinates: [-118.1799, 33.9899], markerOffset: 15},\n    {name: \"New York\", coordinates: [-73.98001, 40.7499], markerOffset: 15},\n    {name: \"Sydney\", coordinates: [151.1851, -33.920010], markerOffset: -15},\n    {name: \"Hong Kong\", coordinates: [114.18500, 22.3049], markerOffset: 15},\n    {name: \"Seattle\", coordinates: [-122.3351, 47.6080], markerOffset: -15},\n    {name: \"Cancun\", coordinates: [-86.8515, 21.1619], markerOffset: -10},\n    {name: \"London\", coordinates: [0.1278, 51.5074], markerOffset: -15},\n    {name: \"Paris\", coordinates: [2.3522, 48.8566], markerOffset: 15},\n    {name: \"MontrÃ©al\", coordinates: [-73.5673, 45.5017], markerOffset: -15},\n\n\n]\n\nconst earthStyle = {\n    fill: '#A5DC69',\n}\n\nexport default class Globe extends React.Component {\n    render() {\n        return (\n            <div style={wrapperStyles}>\n                <ComposableMap\n                    projectionConfig={{\n                        scale: 205,\n                        rotation: [-11, 0, 0],\n                    }}\n                    width={980}\n                    height={551}\n                    style={{\n                        width: \"100%\",\n                        height: \"auto\",\n                    }}\n                >\n                    <ZoomableGroup center={[0, 20]} disablePanning>\n                        <Geographies geography={paths}>\n                            {(geographies, projection) =>\n                                geographies.map((geography, i) =>\n                                    geography.id !== \"ATA\" && (\n                                        <Geography key={i} geography={geography} projection={projection} style={\n                                            {\n                                                default: {\n                                                    fill: \"#A5DC69\",\n                                                    stroke: \"#607D8B\",\n                                                    strokeWidth: 3,\n                                                    outline: \"none\"\n                                                },\n                                                hover: {\n                                                    fill: \"#A5DC69\",\n                                                    stroke: \"#607D8B\",\n                                                    strokeWidth: 3,\n                                                    outline: \"none\"\n                                                },\n                                            }\n                                        }/>\n                                    ))}\n                        </Geographies>\n                        <Markers>\n                            {places.map((marker, i) => (\n                                <Marker\n                                    key={i}\n                                    marker={marker}\n                                    src={sf}\n                                    style={{\n                                        default: {fill: \"red\"},\n\n                                    }}\n                                >\n                                    <g transform=\"translate(-12, -24)\">\n                                        <path\n                                            fill=\"none\"\n                                            strokeWidth=\"2\"\n                                            strokeLinecap=\"square\"\n                                            strokeMiterlimit=\"10\"\n                                            strokeLinejoin=\"miter\"\n                                            d=\"M20,9c0,4.9-8,13-8,13S4,13.9,4,9c0-5.1,4.1-8,8-8S20,3.9,20,9z\"\n                                        />\n                                        <circle\n                                            fill=\"none\"\n                                            strokeWidth=\"2\"\n                                            strokeLinecap=\"square\"\n                                            strokeMiterlimit=\"10\"\n                                            strokeLinejoin=\"miter\"\n                                            cx=\"12\"\n                                            cy=\"9\"\n                                            r=\"3\"\n                                        />\n                                    </g>\n                                    <text\n                                        textAnchor=\"middle\"\n                                        y={marker.markerOffset}\n                                        style={{\n                                            fontFamily: \"Roboto, sans-serif\",\n                                            fill: \"white\",\n                                            backgroundColor: 'black'\n                                        }}\n                                    >\n                                        {marker.name}\n                                    </text>\n                                </Marker>\n                            ))}\n                        </Markers>\n                    </ZoomableGroup>\n                </ComposableMap>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}