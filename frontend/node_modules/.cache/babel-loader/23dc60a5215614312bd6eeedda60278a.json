{"ast":null,"code":"import _slicedToArray from \"/Users/Alex/WebstormProjects/am.xyz/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/Alex/WebstormProjects/am.xyz/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Alex/WebstormProjects/am.xyz/frontend/src/App.js\";\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n    border: 3px solid white;\\n    border-radius: 5px;\\n    grid-area: buttons;\\n    display: inline;\\n    color: white;\\n    background-color: transparent;\\n    max-width: 200px;\\n    max-height: 50px;\\n    font-size: 32px;\\n    margin: 0 0 0 5vw;\\n    font-family: 'ABeeZee', Serif;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n    display: inline-grid;\\n    grid-template-columns: 5vw 50vw ;\\n    grid-template-rows: 10vh 15vh 55vh 20vh;\\n    grid-template-areas: \\n    \\\"cs toggle\\\"\\n    \\\"cs space\\\"\\n    \\\"cs words\\\"\\n    \\\"cs buttons\\\"\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    font-size: 42pt;\\n    padding: 0;\\n    color: white;\\n    font-family: 'ABeeZee', Serif;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    font-size: 22pt;\\n    line-height: 100%;\\n    padding: 0;\\n    margin: 0 0 15vh 5vw ;\\n    width: 50vw;\\n    display: inline-block;\\n    grid-area: words;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    font-size: \", \"pt;\\n    padding: 0;\\n    margin: 0;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    color: white;\\n    font-family: 'ABeeZee', Serif;\\n    margin: 0 0 0 5vw ;\\n    padding: 0;\\n    width: 10vw;\\n    text-align: left;\\n    grid-area: toggle;\\n    cursor: hand;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    height: 100vh;\\n    width: auto;\\n    float: right;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    background-color: #0D1836;\\n    width: 100vw;\\n    height: 100vh;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport './langSlider.css';\nimport styled from 'styled-components';\nimport cut from \"./cut.svg\";\n/*\nUse this to pull all photos from a folder, and make an array from them\nfunction importAll(r) {\n    return r.keys().map(r);\n}\nconst images = importAll(require.context('./assets/photos/', false, /\\.(png|jpe?g|svg)$/));\n*/\n\nvar BackgroundDiv = styled.div(_templateObject());\nvar CutImage = styled.img(_templateObject2());\nvar LangToggle = styled.p(_templateObject3());\nvar LangP = styled.p(_templateObject4(), function (props) {\n  return props.size;\n});\nvar Words = styled.div(_templateObject5());\nvar InlinePara = styled.p(_templateObject6());\nvar Grid = styled.div(_templateObject7());\nvar LinkButton = styled.button(_templateObject8());\nexport function App() {\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      en = _useState2[0],\n      changeLang = _useState2[1];\n  /*\n  changeLang = () => {\n      this.state.lang === 'en' || \"\" ? this.setState({lang: \"fr\"}) : this.setState({lang: \"en\"});\n  };\n  toggleMap = () => {\n      console.log(this.state.mapVisible)\n      this.state.mapVisible === 0 ? this.setState({mapVisible: 1}) : this.setState({mapVisible: 0})\n  }\n  */\n\n\n  var handleChange = function handleChange() {\n    return changeLang(!en) && console.log(en);\n  };\n\n  return React.createElement(BackgroundDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(LangToggle, {\n    onClick: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(LangP, {\n    size: en ? 14 : 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"EN\"), \" | \", React.createElement(LangP, {\n    size: en ? 12 : 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"FR\")), React.createElement(Words, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(InlinePara, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"u\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Alex\")), React.createElement(InlinePara, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, en ? \"Engineering\" : \"Ingénierie\", \".\"), React.createElement(InlinePara, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, en ? \"Strategy\" : \"Stratégie\", \".\"), React.createElement(InlinePara, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, en ? \"Mostly edible baking\" : \"\", \".\")), React.createElement(LinkButton, {\n    a: 'linkedin.com/in/alexjmyers',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Linkedin\"), React.createElement(LinkButton, {\n    a: 'linkedin.com/in/alexjmyers',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Github\"), React.createElement(LinkButton, {\n    a: 'mailto:me@am.xyz?',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Contact\")), React.createElement(CutImage, {\n    src: cut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }));\n}\nexport default App;","map":{"version":3,"sources":["/Users/Alex/WebstormProjects/am.xyz/frontend/src/App.js"],"names":["React","useState","styled","BackgroundDiv","div","CutImage","img","LangToggle","p","LangP","props","size","Words","InlinePara","Grid","LinkButton","button","App","en","changeLang","handleChange","console","log","cut"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAGA;;;;;;;;AAQA,IAAMC,aAAa,GAAGD,MAAM,CAACE,GAAV,mBAAnB;AAKA,IAAMC,QAAQ,GAAGH,MAAM,CAACI,GAAV,oBAAd;AAKA,IAAMC,UAAU,GAAGL,MAAM,CAACM,CAAV,oBAAhB;AAWA,IAAMC,KAAK,GAAGP,MAAM,CAACM,CAAV,qBACM,UAAAE,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAV;AAAA,CADX,CAAX;AAMA,IAAMC,KAAK,GAAGV,MAAM,CAACE,GAAV,oBAAX;AAUA,IAAMS,UAAU,GAAGX,MAAM,CAACM,CAAV,oBAAhB;AAMA,IAAMM,IAAI,GAAGZ,MAAM,CAACE,GAAV,oBAAV;AAUA,IAAMW,UAAU,GAAGb,MAAM,CAACc,MAAV,oBAAhB;AAcA,OAAO,SAASC,GAAT,GAAe;AAAA,kBACOhB,QAAQ,CAAC,CAAD,CADf;AAAA;AAAA,MACXiB,EADW;AAAA,MACPC,UADO;AAElB;;;;;;;;;;;AASA,MAAIC,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMD,UAAU,CAAC,CAACD,EAAF,CAAV,IAAmBG,OAAO,CAACC,GAAR,CAAYJ,EAAZ,CAAzB;AAAA,GAAnB;;AAEA,SACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEE,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEF,EAAE,GAAG,EAAH,GAAQ,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,SAC4C,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,EAAE,GAAG,EAAH,GAAQ,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD5C,CADJ,EAII,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ,CADJ,EAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,EAAE,GAAG,aAAH,GAAmB,YAAlC,MAFJ,EAGI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,EAAE,GAAG,UAAH,GAAgB,WAA/B,MAHJ,EAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,EAAE,GAAG,sBAAH,GAA4B,EAA3C,MAJJ,CAJJ,EAUI,oBAAC,UAAD;AAAY,IAAA,CAAC,EAAE,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,EAWI,oBAAC,UAAD;AAAY,IAAA,CAAC,EAAE,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,EAYI,oBAAC,UAAD;AAAY,IAAA,CAAC,EAAE,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAZJ,CADJ,EAeI,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEK,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,CADJ;AAmBH;AAED,eAAeN,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport './langSlider.css'\nimport styled from 'styled-components'\nimport cut from './cut.svg'\n\n/*\nUse this to pull all photos from a folder, and make an array from them\nfunction importAll(r) {\n    return r.keys().map(r);\n}\nconst images = importAll(require.context('./assets/photos/', false, /\\.(png|jpe?g|svg)$/));\n*/\n\nconst BackgroundDiv = styled.div`\n    background-color: #0D1836;\n    width: 100vw;\n    height: 100vh;\n`\nconst CutImage = styled.img`\n    height: 100vh;\n    width: auto;\n    float: right;\n`\nconst LangToggle = styled.p`\n    color: white;\n    font-family: 'ABeeZee', Serif;\n    margin: 0 0 0 5vw ;\n    padding: 0;\n    width: 10vw;\n    text-align: left;\n    grid-area: toggle;\n    cursor: hand;\n`\n\nconst LangP = styled.p`\n    font-size: ${props => props.size}pt;\n    padding: 0;\n    margin: 0;\n`\n\nconst Words = styled.div`\n    font-size: 22pt;\n    line-height: 100%;\n    padding: 0;\n    margin: 0 0 15vh 5vw ;\n    width: 50vw;\n    display: inline-block;\n    grid-area: words;\n`\n\nconst InlinePara = styled.p`\n    font-size: 42pt;\n    padding: 0;\n    color: white;\n    font-family: 'ABeeZee', Serif;\n`\nconst Grid = styled.div`\n    display: inline-grid;\n    grid-template-columns: 5vw 50vw ;\n    grid-template-rows: 10vh 15vh 55vh 20vh;\n    grid-template-areas: \n    \"cs toggle\"\n    \"cs space\"\n    \"cs words\"\n    \"cs buttons\"\n`\nconst LinkButton = styled.button`\n    border: 3px solid white;\n    border-radius: 5px;\n    grid-area: buttons;\n    display: inline;\n    color: white;\n    background-color: transparent;\n    max-width: 200px;\n    max-height: 50px;\n    font-size: 32px;\n    margin: 0 0 0 5vw;\n    font-family: 'ABeeZee', Serif;\n`\n\nexport function App() {\n    const [en, changeLang] = useState(1)\n    /*\n    changeLang = () => {\n        this.state.lang === 'en' || \"\" ? this.setState({lang: \"fr\"}) : this.setState({lang: \"en\"});\n    };\n    toggleMap = () => {\n        console.log(this.state.mapVisible)\n        this.state.mapVisible === 0 ? this.setState({mapVisible: 1}) : this.setState({mapVisible: 0})\n    }\n    */\n    var handleChange = () => changeLang(!en) && console.log(en)\n\n    return (\n        <BackgroundDiv>\n            <Grid>\n                <LangToggle onClick={handleChange}>\n                    <LangP size={en ? 14 : 12}>EN</LangP> | <LangP size={en ? 12 : 14}>FR</LangP>\n                </LangToggle>\n                <Words>\n                    <InlinePara><u>Alex</u></InlinePara>\n                    <InlinePara>{en ? \"Engineering\" : \"Ingénierie\"}.</InlinePara>\n                    <InlinePara>{en ? \"Strategy\" : \"Stratégie\"}.</InlinePara>\n                    <InlinePara>{en ? \"Mostly edible baking\" : \"\"}.</InlinePara>\n                </Words>\n                <LinkButton a={'linkedin.com/in/alexjmyers'}>Linkedin</LinkButton>\n                <LinkButton a={'linkedin.com/in/alexjmyers'}>Github</LinkButton>\n                <LinkButton a={'mailto:me@am.xyz?'}>Contact</LinkButton>\n            </Grid>\n            <CutImage src={cut} />\n        </BackgroundDiv>\n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}