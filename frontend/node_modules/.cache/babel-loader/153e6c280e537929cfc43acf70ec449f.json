{"ast":null,"code":"var _jsxFileName = \"/Users/Alex/WebstormProjects/am.xyz/frontend/src/globe/Globe.js\";\nimport React from 'react';\nimport { ComposableMap, ZoomableGroup, Geographies, Geography } from \"react-simple-maps\";\nimport places from './places.json';\nimport paths from './paths.json';\nconst wrapperStyles = {\n  width: \"100%\",\n  maxWidth: 980,\n  margin: \"0 auto\"\n};\nexport default class Globe extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      style: wrapperStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(ComposableMap, {\n      projectionConfig: {\n        scale: 205,\n        rotation: [-11, 0, 0]\n      },\n      width: 980,\n      height: 551,\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(ZoomableGroup, {\n      center: [0, 20],\n      disablePanning: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Geographies, {\n      geography: \"./paths.json\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, (geographies, projection) => geographies.map((geography, i) => geography.id !== \"ATA\" && React.createElement(Geography, {\n      key: i,\n      geography: geography,\n      projection: projection,\n      style: {\n        default: {\n          fill: \"#ECEFF1\",\n          stroke: \"#607D8B\",\n          strokeWidth: 0.75,\n          outline: \"none\"\n        },\n        hover: {\n          fill: \"#607D8B\",\n          stroke: \"#607D8B\",\n          strokeWidth: 0.75,\n          outline: \"none\"\n        },\n        pressed: {\n          fill: \"#FF5722\",\n          stroke: \"#607D8B\",\n          strokeWidth: 0.75,\n          outline: \"none\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Alex/WebstormProjects/am.xyz/frontend/src/globe/Globe.js"],"names":["React","ComposableMap","ZoomableGroup","Geographies","Geography","places","paths","wrapperStyles","width","maxWidth","margin","Globe","Component","render","scale","rotation","height","geographies","projection","map","geography","i","id","default","fill","stroke","strokeWidth","outline","hover","pressed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,SAJJ,QAKO,mBALP;AAMA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAIA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,MADW;AAElBC,EAAAA,QAAQ,EAAE,GAFQ;AAGlBC,EAAAA,MAAM,EAAE;AAHU,CAAtB;AAMA,eAAe,MAAMC,KAAN,SAAoBX,KAAK,CAACY,SAA1B,CAAoC;AAC/CC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,KAAK,EAAEN,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AACI,MAAA,gBAAgB,EAAE;AACdO,QAAAA,KAAK,EAAE,GADO;AAEdC,QAAAA,QAAQ,EAAE,CAAC,CAAC,EAAF,EAAK,CAAL,EAAO,CAAP;AAFI,OADtB;AAKI,MAAA,KAAK,EAAE,GALX;AAMI,MAAA,MAAM,EAAE,GANZ;AAOI,MAAA,KAAK,EAAE;AACHP,QAAAA,KAAK,EAAE,MADJ;AAEHQ,QAAAA,MAAM,EAAE;AAFL,OAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYI,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAE,CAAC,CAAD,EAAG,EAAH,CAAvB;AAA+B,MAAA,cAAc,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAE,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACC,WAAD,EAAcC,UAAd,KAA6BD,WAAW,CAACE,GAAZ,CAAgB,CAACC,SAAD,EAAYC,CAAZ,KAAkBD,SAAS,CAACE,EAAV,KAAiB,KAAjB,IAC5D,oBAAC,SAAD;AACI,MAAA,GAAG,EAAED,CADT;AAEI,MAAA,SAAS,EAAED,SAFf;AAGI,MAAA,UAAU,EAAEF,UAHhB;AAII,MAAA,KAAK,EAAE;AACHK,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE,SADD;AAELC,UAAAA,MAAM,EAAE,SAFH;AAGLC,UAAAA,WAAW,EAAE,IAHR;AAILC,UAAAA,OAAO,EAAE;AAJJ,SADN;AAOHC,QAAAA,KAAK,EAAE;AACHJ,UAAAA,IAAI,EAAE,SADH;AAEHC,UAAAA,MAAM,EAAE,SAFL;AAGHC,UAAAA,WAAW,EAAE,IAHV;AAIHC,UAAAA,OAAO,EAAE;AAJN,SAPJ;AAaHE,QAAAA,OAAO,EAAE;AACLL,UAAAA,IAAI,EAAE,SADD;AAELC,UAAAA,MAAM,EAAE,SAFH;AAGLC,UAAAA,WAAW,EAAE,IAHR;AAILC,UAAAA,OAAO,EAAE;AAJJ;AAbN,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD0B,CADlC,CADJ,CAZJ,CADJ,CADJ;AAgDH;;AAlD8C","sourcesContent":["import React from 'react'\nimport {\n    ComposableMap,\n    ZoomableGroup,\n    Geographies,\n    Geography,\n} from \"react-simple-maps\"\nimport places from './places.json'\nimport paths from './paths.json'\n\n\n\nconst wrapperStyles = {\n    width: \"100%\",\n    maxWidth: 980,\n    margin: \"0 auto\",\n}\n\nexport default class Globe extends React.Component {\n    render() {\n        return (\n            <div style={wrapperStyles}>\n                <ComposableMap\n                    projectionConfig={{\n                        scale: 205,\n                        rotation: [-11,0,0],\n                    }}\n                    width={980}\n                    height={551}\n                    style={{\n                        width: \"100%\",\n                        height: \"auto\",\n                    }}\n                >\n                    <ZoomableGroup center={[0,20]} disablePanning>\n                        <Geographies geography= \"./paths.json\" >\n                            {(geographies, projection) => geographies.map((geography, i) => geography.id !== \"ATA\" && (\n                                <Geography\n                                    key={i}\n                                    geography={geography}\n                                    projection={projection}\n                                    style={{\n                                        default: {\n                                            fill: \"#ECEFF1\",\n                                            stroke: \"#607D8B\",\n                                            strokeWidth: 0.75,\n                                            outline: \"none\",\n                                        },\n                                        hover: {\n                                            fill: \"#607D8B\",\n                                            stroke: \"#607D8B\",\n                                            strokeWidth: 0.75,\n                                            outline: \"none\",\n                                        },\n                                        pressed: {\n                                            fill: \"#FF5722\",\n                                            stroke: \"#607D8B\",\n                                            strokeWidth: 0.75,\n                                            outline: \"none\",\n                                        },\n                                    }}\n                                />\n                            ))}\n                        </Geographies>\n                    </ZoomableGroup>\n                </ComposableMap>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}