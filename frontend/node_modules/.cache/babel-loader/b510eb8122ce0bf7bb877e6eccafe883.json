{"ast":null,"code":"var _jsxFileName = \"/Users/Alex/WebstormProjects/am.xyz/frontend/src/globe/Globe.js\";\nimport React from 'react';\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker } from \"react-simple-maps\";\nimport places from './places.json';\nimport paths from './paths.json';\nconst wrapperStyles = {\n  width: \"100%\",\n  maxWidth: 980,\n  margin: \"0 auto\",\n  textDecoration: 'none',\n  backgroundColor: '#78D2FA'\n};\nconst testMarket = [{\n  markerOffset: -25,\n  name: \"Buenos Aires\",\n  coordinates: [-58.3816, -34.6037]\n}];\nconst earthStyle = {\n  fill: '#A5DC69'\n};\nexport default class Globe extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      style: wrapperStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(ComposableMap, {\n      projectionConfig: {\n        scale: 205,\n        rotation: [-11, 0, 0]\n      },\n      width: 980,\n      height: 551,\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(ZoomableGroup, {\n      center: [0, 20],\n      disablePanning: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Geographies, {\n      geography: paths,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, (geographies, projection) => geographies.map((geography, i) => geography.id !== \"ATA\" && React.createElement(Geography, {\n      key: i,\n      geography: geography,\n      projection: projection,\n      style: {\n        default: {\n          fill: \"#A5DC69\",\n          stroke: \"#607D8B\",\n          strokeWidth: 3,\n          outline: \"none\"\n        },\n        hover: {\n          fill: \"#A5DC69\",\n          stroke: \"#607D8B\",\n          strokeWidth: 3,\n          outline: \"none\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))), React.createElement(Markers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, testMarket.map((marker, i) => React.createElement(Marker, {\n      key: i,\n      marker: marker,\n      style: {\n        default: {\n          fill: \"#FF5722\"\n        },\n        hover: {\n          fill: \"#FFFFFF\"\n        },\n        pressed: {\n          fill: \"#FF5722\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"circle\", {\n      cx: 0,\n      cy: 0,\n      r: 10,\n      style: {\n        stroke: \"#FF5722\",\n        strokeWidth: 2.5,\n        opacity: 0.9\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"text\", {\n      textAnchor: \"middle\",\n      y: marker.markerOffset,\n      style: {\n        fontFamily: \"Roboto, sans-serif\",\n        fill: \"#607D8B\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, marker.name)))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Alex/WebstormProjects/am.xyz/frontend/src/globe/Globe.js"],"names":["React","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","places","paths","wrapperStyles","width","maxWidth","margin","textDecoration","backgroundColor","testMarket","markerOffset","name","coordinates","earthStyle","fill","Globe","Component","render","scale","rotation","height","geographies","projection","map","geography","i","id","default","stroke","strokeWidth","outline","hover","marker","pressed","opacity","fontFamily"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    ComposableMap,\n    ZoomableGroup,\n    Geographies,\n    Geography,\n    Markers,\n    Marker\n} from \"react-simple-maps\"\nimport places from './places.json'\nimport paths from './paths.json'\n\n\n\nconst wrapperStyles = {\n    width: \"100%\",\n    maxWidth: 980,\n    margin: \"0 auto\",\n    textDecoration: 'none',\n    backgroundColor:'#78D2FA'\n}\nconst testMarket = [\n    { markerOffset: -25, name: \"Buenos Aires\", coordinates: [-58.3816, -34.6037] }\n    ]\n\nconst earthStyle = {\n    fill: '#A5DC69',\n}\n\nexport default class Globe extends React.Component {\n    render() {\n        return (\n            <div style={wrapperStyles}>\n                <ComposableMap\n                    projectionConfig={{\n                        scale: 205,\n                        rotation: [-11,0,0],\n                    }}\n                    width={980}\n                    height={551}\n                    style={{\n                        width: \"100%\",\n                        height: \"auto\",\n                    }}\n                >\n                    <ZoomableGroup center={[0,20]} disablePanning>\n                        <Geographies geography= {paths} >\n                            {(geographies, projection) =>\n                                geographies.map((geography, i) =>\n                                    geography.id !== \"ATA\" && (\n                                <Geography key={i} geography={geography} projection={projection} style = {\n                                    {\n                                        default: {\n                                            fill: \"#A5DC69\",\n                                            stroke: \"#607D8B\",\n                                            strokeWidth: 3,\n                                            outline: \"none\"\n                                        },\n                                        hover: {\n                                            fill: \"#A5DC69\",\n                                            stroke: \"#607D8B\",\n                                            strokeWidth: 3,\n                                            outline: \"none\"\n                                        },\n                                    }\n                                }/>\n                            ))}\n                        </Geographies>\n                        <Markers>\n                            {testMarket.map((marker, i) => (\n                                <Marker\n                                    key={i}\n                                    marker={marker}\n                                    style={{\n                                        default: { fill: \"#FF5722\" },\n                                        hover: { fill: \"#FFFFFF\" },\n                                        pressed: { fill: \"#FF5722\" },\n                                    }}\n                                >\n                                    <circle\n                                        cx={0}\n                                        cy={0}\n                                        r={10}\n                                        style={{\n                                            stroke: \"#FF5722\",\n                                            strokeWidth: 2.5,\n                                            opacity: 0.9,\n                                        }}\n                                    />\n                                    <text\n                                        textAnchor=\"middle\"\n                                        y={marker.markerOffset}\n                                        style={{\n                                            fontFamily: \"Roboto, sans-serif\",\n                                            fill: \"#607D8B\",\n                                        }}\n                                    >\n                                        {marker.name}\n                                    </text>\n                                </Marker>\n                            ))}\n                        </Markers>\n                    </ZoomableGroup>\n                </ComposableMap>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}