{"ast":null,"code":"import _slicedToArray from \"/Users/Alex/WebstormProjects/am.xyz/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/Alex/WebstormProjects/am.xyz/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Alex/WebstormProjects/am.xyz/frontend/src/App.js\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    font-size: 42pt;\\n    padding: 0;\\n    color: white;\\n    font-family: 'ABeeZee', Serif;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    line-height: 100%;\\n    padding: 0;\\n    margin: 0 0 0 5vw ;\\n    max-width: 40vw\\n    display: inline-block;\\n\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    height: 100vh;\\n    width: auto;\\n    float: right;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    background-color: #0D1836;\\n    width: 100vw;\\n    height: 100vh;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport './langSlider.css';\nimport styled from 'styled-components';\nimport cut from \"./cut.svg\";\n/*\nUse this to pull all photos from a folder, and make an array from them\nfunction importAll(r) {\n    return r.keys().map(r);\n}\nconst images = importAll(require.context('./assets/photos/', false, /\\.(png|jpe?g|svg)$/));\n*/\n\nvar BackgroundDiv = styled.div(_templateObject());\nvar CutImage = styled.img(_templateObject2());\nvar LangToggle = styled.p(_templateObject3());\nvar Words = styled.div(_templateObject4());\nvar InlinePara = styled.p(_templateObject5());\nexport function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      en = _useState2[0],\n      changeLang = _useState2[1];\n  /*\n  changeLang = () => {\n      this.state.lang === 'en' || \"\" ? this.setState({lang: \"fr\"}) : this.setState({lang: \"en\"});\n  };\n  toggleMap = () => {\n      console.log(this.state.mapVisible)\n      this.state.mapVisible === 0 ? this.setState({mapVisible: 1}) : this.setState({mapVisible: 0})\n  }\n  */\n\n\n  return React.createElement(BackgroundDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(LangToggle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Words, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(InlinePara, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"u\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Alex\")), React.createElement(InlinePara, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, en ? \"Engineering\" : \"Ingénierie\", \".\"), React.createElement(InlinePara, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, en ? \"Strategy\" : \"Stratégie\", \".\"), React.createElement(InlinePara, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, en ? \"Nearly edible bread\" : \"\", \".\")), React.createElement(CutImage, {\n    src: cut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }));\n}\nexport default App;","map":{"version":3,"sources":["/Users/Alex/WebstormProjects/am.xyz/frontend/src/App.js"],"names":["React","useState","styled","BackgroundDiv","div","CutImage","img","LangToggle","p","Words","InlinePara","App","en","changeLang","cut"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAGA;;;;;;;;AAQA,IAAMC,aAAa,GAAGD,MAAM,CAACE,GAAV,mBAAnB;AAKA,IAAMC,QAAQ,GAAGH,MAAM,CAACI,GAAV,oBAAd;AAKA,IAAMC,UAAU,GAAGL,MAAM,CAACM,CAAV,oBAAhB;AAIA,IAAMC,KAAK,GAAGP,MAAM,CAACE,GAAV,oBAAX;AASA,IAAMM,UAAU,GAAGR,MAAM,CAACM,CAAV,oBAAhB;AAOA,OAAO,SAASG,GAAT,GAAc;AAAA,kBACQV,QAAQ,CAAC,CAAD,CADhB;AAAA;AAAA,MACVW,EADU;AAAA,MACNC,UADM;AAEjB;;;;;;;;;;;AAUA,SACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ,CADJ,EAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaD,EAAE,GAAG,aAAH,GAAmB,YAAlC,MAFJ,EAGI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,EAAE,GAAG,UAAH,GAAgB,WAA/B,MAHJ,EAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,EAAE,GAAG,qBAAH,GAA2B,EAA1C,MAJJ,CAFJ,EAUI,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAcH;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport './langSlider.css'\nimport styled from 'styled-components'\nimport cut from './cut.svg'\n\n/*\nUse this to pull all photos from a folder, and make an array from them\nfunction importAll(r) {\n    return r.keys().map(r);\n}\nconst images = importAll(require.context('./assets/photos/', false, /\\.(png|jpe?g|svg)$/));\n*/\n\nconst BackgroundDiv = styled.div`\n    background-color: #0D1836;\n    width: 100vw;\n    height: 100vh;\n`\nconst CutImage = styled.img`\n    height: 100vh;\n    width: auto;\n    float: right;\n`\nconst LangToggle = styled.p`\n\n`\n\nconst Words = styled.div`\n    line-height: 100%;\n    padding: 0;\n    margin: 0 0 0 5vw ;\n    max-width: 40vw\n    display: inline-block;\n\n`\n\nconst InlinePara = styled.p`\n    font-size: 42pt;\n    padding: 0;\n    color: white;\n    font-family: 'ABeeZee', Serif;\n`\n\nexport function App(){\n    const [en, changeLang] = useState(0)\n    /*\n    changeLang = () => {\n        this.state.lang === 'en' || \"\" ? this.setState({lang: \"fr\"}) : this.setState({lang: \"en\"});\n    };\n    toggleMap = () => {\n        console.log(this.state.mapVisible)\n        this.state.mapVisible === 0 ? this.setState({mapVisible: 1}) : this.setState({mapVisible: 0})\n    }\n    */\n    \n    return(\n        <BackgroundDiv>\n            <LangToggle/>\n            <Words>\n                <InlinePara><u>Alex</u></InlinePara>\n                <InlinePara>{en ? \"Engineering\" : \"Ingénierie\"}.</InlinePara>\n                <InlinePara>{en ? \"Strategy\" : \"Stratégie\"}.</InlinePara>\n                <InlinePara>{en ? \"Nearly edible bread\" : \"\"}.</InlinePara>\n            </Words>\n\n        \n            <CutImage src={cut}/>\n        </BackgroundDiv>\n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}