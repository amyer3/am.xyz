{"ast":null,"code":"var _jsxFileName = \"/Users/Alex/WebstormProjects/am.xyz/frontend/src/globe/Globe.js\";\nimport React from 'react';\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker } from \"react-simple-maps\";\nimport paths from './topo110m.json';\nimport sf from \"../assets/icons/travel/sf.svg\";\nconst wrapperStyles = {\n  width: \"100%\",\n  margin: \"0 auto\",\n  textDecoration: 'none',\n  backgroundColor: '#78D2FA'\n};\nconst places = [{\n  name: \"SF\",\n  airport: \"SFO\",\n  coordinates: [-122.4599, 37.7400],\n  YMarkerOffset: -15\n}, {\n  name: \"Chicago\",\n  airport: \"ORD\",\n  coordinates: [-87.75005, 41.8299],\n  YMarkerOffset: -15\n}, {\n  name: \"Melbourne\",\n  airport: \"MEL\",\n  coordinates: [144.9750, -37.8200],\n  YMarkerOffset: 25\n}, {\n  name: \"LA\",\n  airport: \"LAX\",\n  coordinates: [-118.1799, 33.9899],\n  YMarkerOffset: 15\n}, {\n  name: \"New York\",\n  airport: \"JFK\",\n  coordinates: [-73.98001, 40.7499],\n  YMarkerOffset: 15\n}, {\n  name: \"Sydney\",\n  airport: \"SYD\",\n  coordinates: [151.1851, -33.920010],\n  YMarkerOffset: -15\n}, {\n  name: \"Hong Kong\",\n  airport: \"HKG\",\n  coordinates: [114.18500, 22.3049],\n  YMarkerOffset: 15\n}, {\n  name: \"Macau\",\n  airport: \"MFM\",\n  coordinates: [113.5439, 22.1987],\n  YMarkerOffset: 15\n}, {\n  name: \"Seattle\",\n  airport: \"SEA\",\n  coordinates: [-122.3351, 47.6080],\n  YMarkerOffset: -15\n}, {\n  name: \"Cancun\",\n  airport: \"CUN\",\n  coordinates: [-86.8515, 21.1619],\n  YMarkerOffset: -10\n}, {\n  name: \"London\",\n  airport: \"LHR\",\n  coordinates: [0.1278, 51.5074],\n  YMarkerOffset: -15\n}, {\n  name: \"Paris\",\n  airport: \"CDG\",\n  coordinates: [2.3522, 48.8566],\n  YMarkerOffset: 15\n}, {\n  name: \"MontrÃ©al\",\n  airport: \"MTL\",\n  coordinates: [-73.5673, 45.5017],\n  YMarkerOffset: -15\n}, {\n  name: \"Las Vegas\",\n  airport: \"LAS\",\n  coordinates: [-115.1398, 36.1699],\n  YMarkerOffset: -15\n}, {\n  name: \"Strasbourg\",\n  airport: \"SXB\",\n  coordinates: [7.7521, 48.5734],\n  YMarkerOffset: -15\n}, {\n  name: \"Ensenada\",\n  airport: \"ESE\",\n  coordinates: [-116.5964, 31.8667],\n  YMarkerOffset: -15\n}, {\n  name: \"Catalina\",\n  airport: \"CIB\",\n  coordinates: [-118.4163, 33.3879],\n  YMarkerOffset: -15\n}, {\n  name: \"Ketchikan\",\n  airport: \"KTN\",\n  coordinates: [-131.6461, 55.3422],\n  YMarkerOffset: -15\n}, {\n  name: \"Sitka\",\n  airport: \"SIT\",\n  coordinates: [-135.3300, 57.0531],\n  YMarkerOffset: -15\n}];\nexport default class Globe extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      style: wrapperStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(ComposableMap, {\n      projectionConfig: {\n        scale: 200,\n        rotation: [-11, 0, 0]\n      },\n      width: 980,\n      height: 551,\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(ZoomableGroup, {\n      center: [10, 15],\n      disablePanning: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Geographies, {\n      geography: paths,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, (geographies, projection) => geographies.map((geography, i) => geography.id !== \"ATA\" && React.createElement(Geography, {\n      key: i,\n      geography: geography,\n      projection: projection,\n      style: {\n        default: {\n          fill: \"#A5DC69\",\n          stroke: \"#607D8B\",\n          strokeWidth: 3,\n          outline: \"none\"\n        },\n        hover: {\n          fill: \"#A5DC69\",\n          stroke: \"#607D8B\",\n          strokeWidth: 3,\n          outline: \"none\"\n        },\n        pressed: {\n          fill: \"#A5DC69\",\n          stroke: \"#607D8B\",\n          strokeWidth: 3,\n          outline: \"none\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))), React.createElement(Markers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, places.map((marker, i) => React.createElement(Marker, {\n      key: i,\n      marker: marker,\n      src: sf,\n      style: {\n        default: {\n          stroke: \"#455A64\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"g\", {\n      transform: \"translate(-12, -24)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"red\",\n      strokeWidth: \"2\",\n      strokeLinecap: \"square\",\n      strokeMiterlimit: \"10\",\n      strokeLinejoin: \"miter\",\n      d: \"M20,9c0,4.9-8,13-8,13S4,13.9,4,9c0-5.1,4.1-8,8-8S20,3.9,20,9z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Alex/WebstormProjects/am.xyz/frontend/src/globe/Globe.js"],"names":["React","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","paths","wrapperStyles","width","margin","textDecoration","backgroundColor","places","name","airport","coordinates","YMarkerOffset","Globe","Component","render","scale","rotation","height","geographies","projection","map","geography","i","id","default","fill","stroke","strokeWidth","outline","hover","pressed","marker","sf"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    ComposableMap,\n    ZoomableGroup,\n    Geographies,\n    Geography,\n    Markers,\n    Marker\n} from \"react-simple-maps\"\nimport paths from './topo110m.json'\nimport sf from '../assets/icons/travel/sf.svg'\n\n\nconst wrapperStyles = {\n    width: \"100%\",\n    margin: \"0 auto\",\n    textDecoration: 'none',\n    backgroundColor: '#78D2FA'\n}\nconst places = [\n    {name: \"SF\", airport: \"SFO\", coordinates: [-122.4599, 37.7400], YMarkerOffset: -15},\n    {name: \"Chicago\", airport: \"ORD\",coordinates: [-87.75005, 41.8299], YMarkerOffset: -15},\n    {name: \"Melbourne\", airport: \"MEL\",coordinates: [144.9750, -37.8200], YMarkerOffset: 25},\n    {name: \"LA\", airport: \"LAX\",coordinates: [-118.1799, 33.9899], YMarkerOffset: 15},\n    {name: \"New York\", airport: \"JFK\",coordinates: [-73.98001, 40.7499], YMarkerOffset: 15},\n    {name: \"Sydney\", airport: \"SYD\",coordinates: [151.1851, -33.920010], YMarkerOffset: -15},\n    {name: \"Hong Kong\", airport: \"HKG\",coordinates: [114.18500, 22.3049], YMarkerOffset: 15},\n    {name: \"Macau\", airport: \"MFM\",coordinates: [113.5439, 22.1987], YMarkerOffset: 15},\n    {name: \"Seattle\", airport: \"SEA\",coordinates: [-122.3351, 47.6080], YMarkerOffset: -15},\n    {name: \"Cancun\", airport: \"CUN\",coordinates: [-86.8515, 21.1619], YMarkerOffset: -10},\n    {name: \"London\", airport: \"LHR\",coordinates: [0.1278, 51.5074], YMarkerOffset: -15},\n    {name: \"Paris\", airport: \"CDG\",coordinates: [2.3522, 48.8566], YMarkerOffset: 15},\n    {name: \"MontrÃ©al\", airport: \"MTL\",coordinates: [-73.5673, 45.5017], YMarkerOffset: -15},\n    {name: \"Las Vegas\", airport: \"LAS\",coordinates: [-115.1398, 36.1699], YMarkerOffset: -15},\n    {name: \"Strasbourg\", airport: \"SXB\",coordinates: [7.7521, 48.5734], YMarkerOffset: -15},\n    {name: \"Ensenada\", airport: \"ESE\",coordinates: [-116.5964, 31.8667], YMarkerOffset: -15},\n    {name: \"Catalina\", airport: \"CIB\",coordinates: [-118.4163, 33.3879], YMarkerOffset: -15},\n    {name: \"Ketchikan\", airport: \"KTN\",coordinates: [-131.6461, 55.3422], YMarkerOffset: -15},\n    {name: \"Sitka\", airport: \"SIT\",coordinates: [-135.3300, 57.0531], YMarkerOffset: -15},\n\n\n\n]\n\nexport default class Globe extends React.Component {\n    render() {\n        return (\n            <div style={wrapperStyles}>\n                <ComposableMap\n                    projectionConfig={{\n                        scale: 200,\n                        rotation: [-11, 0, 0],\n                    }}\n                    width={980}\n                    height={551}\n                    style={{\n                        width: \"100%\",\n                        height: \"auto\",\n                    }}\n                >\n                    <ZoomableGroup center={[10, 15]} disablePanning>\n                        <Geographies geography={paths}>\n                            {(geographies, projection) =>\n                                geographies.map((geography, i) =>\n                                    geography.id !== \"ATA\" && (\n                                        <Geography key={i} geography={geography} projection={projection} style={\n                                            {\n                                                default: {\n                                                    fill: \"#A5DC69\",\n                                                    stroke: \"#607D8B\",\n                                                    strokeWidth: 3,\n                                                    outline: \"none\"\n                                                },\n                                                hover: {\n                                                    fill: \"#A5DC69\",\n                                                    stroke: \"#607D8B\",\n                                                    strokeWidth: 3,\n                                                    outline: \"none\"\n                                                },\n                                                pressed: {\n                                                    fill: \"#A5DC69\",\n                                                    stroke: \"#607D8B\",\n                                                    strokeWidth: 3,\n                                                    outline: \"none\"\n                                                },\n                                            }\n                                        }/>\n                                    ))}\n                        </Geographies>\n                        <Markers>\n                            {places.map((marker, i) => (\n                                <Marker\n                                    key={i}\n                                    marker={marker}\n                                    src={sf}\n                                    style={{\n                                        default: { stroke: \"#455A64\" },\n\n                                    }}\n                                >\n                                    <g transform=\"translate(-12, -24)\">\n                                        <path\n                                            fill=\"red\"\n                                            strokeWidth=\"2\"\n                                            strokeLinecap=\"square\"\n                                            strokeMiterlimit=\"10\"\n                                            strokeLinejoin=\"miter\"\n                                            d=\"M20,9c0,4.9-8,13-8,13S4,13.9,4,9c0-5.1,4.1-8,8-8S20,3.9,20,9z\"\n                                        />\n                                    </g>\n\n\n                                </Marker>\n                            ))}\n                        </Markers>\n                    </ZoomableGroup>\n                </ComposableMap>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}