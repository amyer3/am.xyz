{"ast":null,"code":"var _jsxFileName = \"/Users/Alex/WebstormProjects/am.xyz/frontend/src/globe/Globe.js\";\nimport React from 'react';\nimport { ComposableMap, ZoomableGroup, Geographies, Geography } from \"react-simple-maps\";\nimport places from './places.json';\nimport paths from './paths.json';\nconst wrapperStyles = {\n  width: \"100%\",\n  maxWidth: 980,\n  margin: \"0 auto\",\n  textDecoration: 'none',\n  backgroundColor: '#78D2FA'\n};\nconst testMarket = {\n  \"name\": \"San Francisco\",\n  \"latitude\": 37.740007750499998,\n  \"longitude\": -122.459977663,\n  \"point\": \"\"\n};\nconst earthStyle = {\n  fill: '#A5DC69'\n};\nexport default class Globe extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      style: wrapperStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(ComposableMap, {\n      projectionConfig: {\n        scale: 205,\n        rotation: [-11, 0, 0]\n      },\n      width: 980,\n      height: 551,\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(ZoomableGroup, {\n      center: [0, 20],\n      disablePanning: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Geographies, {\n      geography: paths,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, (geographies, projection) => geographies.map((geography, i) => geography.id !== \"ATA\" && React.createElement(Geography, {\n      key: i,\n      geography: geography,\n      projection: projection,\n      style: {\n        default: {\n          fill: \"#A5DC69\",\n          stroke: \"#607D8B\",\n          strokeWidth: 0.75,\n          outline: \"none\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Alex/WebstormProjects/am.xyz/frontend/src/globe/Globe.js"],"names":["React","ComposableMap","ZoomableGroup","Geographies","Geography","places","paths","wrapperStyles","width","maxWidth","margin","textDecoration","backgroundColor","testMarket","earthStyle","fill","Globe","Component","render","scale","rotation","height","geographies","projection","map","geography","i","id","default","stroke","strokeWidth","outline"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,SAJJ,QAKO,mBALP;AAMA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAIA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,MADW;AAElBC,EAAAA,QAAQ,EAAE,GAFQ;AAGlBC,EAAAA,MAAM,EAAE,QAHU;AAIlBC,EAAAA,cAAc,EAAE,MAJE;AAKlBC,EAAAA,eAAe,EAAC;AALE,CAAtB;AAOA,MAAMC,UAAU,GAAG;AACf,UAAQ,eADO;AAEf,cAAY,kBAFG;AAGf,eAAa,CAAC,aAHC;AAIf,WAAS;AAJM,CAAnB;AAMA,MAAMC,UAAU,GAAG;AACfC,EAAAA,IAAI,EAAE;AADS,CAAnB;AAIA,eAAe,MAAMC,KAAN,SAAoBhB,KAAK,CAACiB,SAA1B,CAAoC;AAC/CC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,KAAK,EAAEX,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AACI,MAAA,gBAAgB,EAAE;AACdY,QAAAA,KAAK,EAAE,GADO;AAEdC,QAAAA,QAAQ,EAAE,CAAC,CAAC,EAAF,EAAK,CAAL,EAAO,CAAP;AAFI,OADtB;AAKI,MAAA,KAAK,EAAE,GALX;AAMI,MAAA,MAAM,EAAE,GANZ;AAOI,MAAA,KAAK,EAAE;AACHZ,QAAAA,KAAK,EAAE,MADJ;AAEHa,QAAAA,MAAM,EAAE;AAFL,OAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYI,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAE,CAAC,CAAD,EAAG,EAAH,CAAvB;AAA+B,MAAA,cAAc,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAGf,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACgB,WAAD,EAAcC,UAAd,KACGD,WAAW,CAACE,GAAZ,CAAgB,CAACC,SAAD,EAAYC,CAAZ,KACZD,SAAS,CAACE,EAAV,KAAiB,KAAjB,IACJ,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAED,CAAhB;AAAmB,MAAA,SAAS,EAAED,SAA9B;AAAyC,MAAA,UAAU,EAAEF,UAArD;AAAiE,MAAA,KAAK,EAClE;AACIK,QAAAA,OAAO,EAAE;AACLb,UAAAA,IAAI,EAAE,SADD;AAELc,UAAAA,MAAM,EAAE,SAFH;AAGLC,UAAAA,WAAW,EAAE,IAHR;AAILC,UAAAA,OAAO,EAAE;AAJJ;AADb,OADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAFR,CADJ,CAZJ,CADJ,CADJ;AAmCH;;AArC8C","sourcesContent":["import React from 'react'\nimport {\n    ComposableMap,\n    ZoomableGroup,\n    Geographies,\n    Geography,\n} from \"react-simple-maps\"\nimport places from './places.json'\nimport paths from './paths.json'\n\n\n\nconst wrapperStyles = {\n    width: \"100%\",\n    maxWidth: 980,\n    margin: \"0 auto\",\n    textDecoration: 'none',\n    backgroundColor:'#78D2FA'\n}\nconst testMarket = {\n    \"name\": \"San Francisco\",\n    \"latitude\": 37.740007750499998,\n    \"longitude\": -122.459977663,\n    \"point\": \"\"\n}\nconst earthStyle = {\n    fill: '#A5DC69',\n}\n\nexport default class Globe extends React.Component {\n    render() {\n        return (\n            <div style={wrapperStyles}>\n                <ComposableMap\n                    projectionConfig={{\n                        scale: 205,\n                        rotation: [-11,0,0],\n                    }}\n                    width={980}\n                    height={551}\n                    style={{\n                        width: \"100%\",\n                        height: \"auto\",\n                    }}\n                >\n                    <ZoomableGroup center={[0,20]} disablePanning>\n                        <Geographies geography= {paths} >\n                            {(geographies, projection) =>\n                                geographies.map((geography, i) =>\n                                    geography.id !== \"ATA\" && (\n                                <Geography key={i} geography={geography} projection={projection} style = {\n                                    {\n                                        default: {\n                                            fill: \"#A5DC69\",\n                                            stroke: \"#607D8B\",\n                                            strokeWidth: 0.75,\n                                            outline: \"none\"\n                                        }\n                                    }\n                                }/>\n                            ))}\n                        </Geographies>\n                    </ZoomableGroup>\n                </ComposableMap>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}