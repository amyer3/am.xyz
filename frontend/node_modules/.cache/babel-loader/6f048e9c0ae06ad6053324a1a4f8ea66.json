{"ast":null,"code":"import _classCallCheck from \"/Users/Alex/WebstormProjects/am.xyz/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Alex/WebstormProjects/am.xyz/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Alex/WebstormProjects/am.xyz/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Alex/WebstormProjects/am.xyz/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Alex/WebstormProjects/am.xyz/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Alex/WebstormProjects/am.xyz/frontend/src/globe/Globe.js\";\nimport React from 'react';\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker } from \"react-simple-maps\";\nimport paths from './topo110m.json';\nimport places from './places.json';\nvar wrapperStyles = {\n  width: \"100%\",\n  margin: \"0 auto\",\n  textDecoration: 'none',\n  backgroundColor: '#78D2FA'\n};\n\nvar Globe =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Globe, _React$Component);\n\n  function Globe() {\n    _classCallCheck(this, Globe);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Globe).apply(this, arguments));\n  }\n\n  _createClass(Globe, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: wrapperStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(ComposableMap, {\n        projectionConfig: {\n          scale: 180,\n          rotation: [-11, 0, 0]\n        },\n        style: {\n          width: \"100%\",\n          height: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(ZoomableGroup, {\n        center: [10, 15],\n        disablePanning: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Geographies, {\n        geography: paths,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, function (geographies, projection) {\n        return geographies.map(function (geography, i) {\n          return geography.id !== \"ATA\" && React.createElement(Geography, {\n            key: i,\n            geography: geography,\n            projection: projection,\n            style: {\n              \"default\": {\n                fill: \"#56bd5c\",\n                stroke: \"#39752b\",\n                strokeWidth: 2,\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#56bd5c\",\n                stroke: \"#39752b\",\n                strokeWidth: 2,\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#56bd5c\",\n                stroke: \"#39752b\",\n                strokeWidth: 2,\n                outline: \"none\"\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          });\n        });\n      }), React.createElement(Markers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, places.map(function (marker, i) {\n        return React.createElement(Marker, {\n          key: i,\n          marker: marker,\n          style: {\n            \"default\": {\n              stroke: \"#455A64\"\n            },\n            hover: {\n              fill: \"#56bd5c\",\n              stroke: \"#39752b\",\n              strokeWidth: 2,\n              outline: \"none\"\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"g\", {\n          transform: \"translate(-12, -24)\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"path\", {\n          fill: \"red\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"square\",\n          strokeMiterlimit: \"10\",\n          strokeLinejoin: \"miter\",\n          d: \"M20,9c0,4.9-8,13-8,13S4,13.9,4,9c0-5.1,4.1-8,8-8S20,3.9,20,9z\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        })));\n      })))));\n    }\n  }]);\n\n  return Globe;\n}(React.Component);\n\nexport { Globe as default };","map":{"version":3,"sources":["/Users/Alex/WebstormProjects/am.xyz/frontend/src/globe/Globe.js"],"names":["React","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","paths","places","wrapperStyles","width","margin","textDecoration","backgroundColor","Globe","scale","rotation","height","geographies","projection","map","geography","i","id","fill","stroke","strokeWidth","outline","hover","pressed","marker","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    ComposableMap,\n    ZoomableGroup,\n    Geographies,\n    Geography,\n    Markers,\n    Marker\n} from \"react-simple-maps\"\nimport paths from './topo110m.json'\nimport places from './places.json'\n\n\nconst wrapperStyles = {\n    width: \"100%\",\n    margin: \"0 auto\",\n    textDecoration: 'none',\n    backgroundColor: '#78D2FA'\n}\n\n\nexport default class Globe extends React.Component {\n    render() {\n        return (\n            <div style={wrapperStyles}>\n                <ComposableMap\n                    projectionConfig={{\n                        scale: 180,\n                        rotation: [-11, 0, 0],\n                    }}\n                    style={{\n                        width: \"100%\",\n                        height: \"auto\",\n                    }}\n                >\n                    <ZoomableGroup center={[10, 15]} disablePanning>\n                        <Geographies geography={paths}>\n                            {(geographies, projection) =>\n                                geographies.map((geography, i) =>\n                                    geography.id !== \"ATA\" && (\n                                        <Geography key={i} geography={geography} projection={projection} style={\n                                            {\n                                                default: {\n                                                    fill: \"#56bd5c\",\n                                                    stroke: \"#39752b\",\n                                                    strokeWidth: 2,\n                                                    outline: \"none\"\n                                                },\n                                                hover: {\n                                                    fill: \"#56bd5c\",\n                                                    stroke: \"#39752b\",\n                                                    strokeWidth: 2,\n                                                    outline: \"none\"\n                                                },\n                                                pressed: {\n                                                    fill: \"#56bd5c\",\n                                                    stroke: \"#39752b\",\n                                                    strokeWidth: 2,\n                                                    outline: \"none\"\n                                                },\n                                            }\n                                        }/>\n                                    ))}\n                        </Geographies>\n                        <Markers>\n                            {places.map((marker, i) => (\n                                <Marker\n                                    key={i}\n                                    marker={marker}\n                                    style={\n                                        {\n                                            default: {\n                                                stroke: \"#455A64\"\n                                            },\n                                            hover: {\n                                                fill: \"#56bd5c\",\n                                                stroke: \"#39752b\",\n                                                strokeWidth: 2,\n                                                outline: \"none\"\n                                            }\n                                        }\n                                    }\n                                >\n                                    <g transform=\"translate(-12, -24)\">\n                                        <path\n                                            fill=\"red\"\n                                            strokeWidth=\"2\"\n                                            strokeLinecap=\"square\"\n                                            strokeMiterlimit=\"10\"\n                                            strokeLinejoin=\"miter\"\n                                            d=\"M20,9c0,4.9-8,13-8,13S4,13.9,4,9c0-5.1,4.1-8,8-8S20,3.9,20,9z\"\n                                        />\n                                    </g>\n\n                                </Marker>\n                            ))}\n                        </Markers>\n                    </ZoomableGroup>\n                </ComposableMap>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}