{"ast":null,"code":"var _jsxFileName = \"/Users/Alex/WebstormProjects/am.xyz/frontend/src/globe/Globe.js\";\nimport React from 'react';\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker } from \"react-simple-maps\";\nimport paths from './topo110m.json';\nimport places from './places.json';\nconst wrapperStyles = {\n  width: \"100%\",\n  margin: \"0 auto\",\n  textDecoration: 'none',\n  backgroundColor: '#78D2FA'\n};\nexport default class Globe extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      style: wrapperStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(ComposableMap, {\n      projectionConfig: {\n        scale: 150,\n        rotation: [-11, 0, 0]\n      },\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      },\n      projection: 'eckert4',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(ZoomableGroup, {\n      center: [10, 15],\n      disablePanning: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Geographies, {\n      geography: paths,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, (geographies, projection) => geographies.map((geography, i) => geography.id !== \"ATA\" && React.createElement(Geography, {\n      key: i,\n      geography: geography,\n      projection: projection,\n      style: {\n        default: {\n          fill: \"#56bd5c\",\n          stroke: \"#39752b\",\n          strokeWidth: 2,\n          outline: \"none\"\n        },\n        hover: {\n          fill: \"#56bd5c\",\n          stroke: \"#39752b\",\n          strokeWidth: 2,\n          outline: \"none\"\n        },\n        pressed: {\n          fill: \"#56bd5c\",\n          stroke: \"#39752b\",\n          strokeWidth: 2,\n          outline: \"none\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }))), React.createElement(Markers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, places.map((marker, i) => React.createElement(Marker, {\n      key: i,\n      marker: marker,\n      style: {\n        default: {\n          stroke: \"#455A64\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"g\", {\n      transform: \"translate(-12, -24)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"red\",\n      strokeWidth: \"2\",\n      strokeLinecap: \"square\",\n      strokeMiterlimit: \"10\",\n      strokeLinejoin: \"miter\",\n      d: \"M20,9c0,4.9-8,13-8,13S4,13.9,4,9c0-5.1,4.1-8,8-8S20,3.9,20,9z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Alex/WebstormProjects/am.xyz/frontend/src/globe/Globe.js"],"names":["React","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","paths","places","wrapperStyles","width","margin","textDecoration","backgroundColor","Globe","Component","render","scale","rotation","height","geographies","projection","map","geography","i","id","default","fill","stroke","strokeWidth","outline","hover","pressed","marker"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    ComposableMap,\n    ZoomableGroup,\n    Geographies,\n    Geography,\n    Markers,\n    Marker\n} from \"react-simple-maps\"\nimport paths from './topo110m.json'\nimport places from './places.json'\n\n\nconst wrapperStyles = {\n    width: \"100%\",\n    margin: \"0 auto\",\n    textDecoration: 'none',\n    backgroundColor: '#78D2FA'\n}\n\n\nexport default class Globe extends React.Component {\n    render() {\n        return (\n            <div style={wrapperStyles}>\n                <ComposableMap\n                    projectionConfig={{\n                        scale: 150,\n                        rotation: [-11, 0, 0],\n                    }}\n                    style={{\n                        width: \"100%\",\n                        height: \"auto\",\n                    }}\n                    projection = {'eckert4'}\n                >\n                    <ZoomableGroup center={[10, 15]} disablePanning>\n                        <Geographies geography={paths}>\n                            {(geographies, projection) =>\n                                geographies.map((geography, i) =>\n                                    geography.id !== \"ATA\" && (\n                                        <Geography key={i} geography={geography} projection={projection} style={\n                                            {\n                                                default: {\n                                                    fill: \"#56bd5c\",\n                                                    stroke: \"#39752b\",\n                                                    strokeWidth: 2,\n                                                    outline: \"none\"\n                                                },\n                                                hover: {\n                                                    fill: \"#56bd5c\",\n                                                    stroke: \"#39752b\",\n                                                    strokeWidth: 2,\n                                                    outline: \"none\"\n                                                },\n                                                pressed: {\n                                                    fill: \"#56bd5c\",\n                                                    stroke: \"#39752b\",\n                                                    strokeWidth: 2,\n                                                    outline: \"none\"\n                                                },\n                                            }\n                                        }/>\n                                    ))}\n                        </Geographies>\n                        <Markers>\n                            {places.map((marker, i) => (\n                                <Marker\n                                    key={i}\n                                    marker={marker}\n                                    style={{\n                                        default: { stroke: \"#455A64\" },\n\n                                    }}\n                                >\n                                    <g transform=\"translate(-12, -24)\">\n                                        <path\n                                            fill=\"red\"\n                                            strokeWidth=\"2\"\n                                            strokeLinecap=\"square\"\n                                            strokeMiterlimit=\"10\"\n                                            strokeLinejoin=\"miter\"\n                                            d=\"M20,9c0,4.9-8,13-8,13S4,13.9,4,9c0-5.1,4.1-8,8-8S20,3.9,20,9z\"\n                                        />\n                                    </g>\n\n                                </Marker>\n                            ))}\n                        </Markers>\n                    </ZoomableGroup>\n                </ComposableMap>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}