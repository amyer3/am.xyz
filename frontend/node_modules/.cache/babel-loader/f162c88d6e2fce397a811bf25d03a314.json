{"ast":null,"code":"import _slicedToArray from \"/Users/Alex/WebstormProjects/am.xyz/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/Alex/WebstormProjects/am.xyz/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Alex/WebstormProjects/am.xyz/frontend/src/App.js\";\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n    display: grid;\\n    margin: 0;\\n    padding: 0;\\n    grid-template-columns: 30% 5% 30% 5% 30%;\\n    grid-template-rows: 50% 50%;\\n    grid-template-areas:\\n    \\\"li s1 gh s2 ct\\\"\\n    \\\"map map map map map\\\";\\n    grid-area: buttons;\\n\\n    @media (min-width < \", \") {\\n        grid-template-columns: 8% 38% 8% 38% 8%\\n        grid-template-rows 50% 50%\\n        grid-template-areas: \\n        \\\"ls li cs gh rs\\\"\\n        \\\"ls em cs wa rs\\\";\\n\\n    }\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n    border: 3px solid white;\\n    border-radius: 10px;\\n    display: inline-block;\\n    color: white;\\n    background-color: transparent;\\n    max-width: 200px;\\n    max-height: 50px;\\n    font-size: 26pt;\\n    font-family: 'ABeeZee', Serif;\\n    grid-area: \", \"\\n    width: 100%;\\n    text-align: center;\\n    text-decoration: none;\\n    outline: 0;\\n    vertical-align: middle;\\n    line-height: 50px;\\n\\n    @media (min-width < \", \") {\\n\\n    }\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n    display: inline-grid;\\n    grid-template-columns: 10vw 45vw ;\\n    grid-template-rows: 10vh 10vh 55vh 25vh;\\n    grid-template-areas: \\n    \\\"cs toggle\\\"\\n    \\\"cs space\\\"\\n    \\\"cs words\\\"\\n    \\\"cs buttons\\\"\\n\\n    @media (min-width < \", \") {\\n\\n    }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    font-size: 42pt;\\n    padding: 0;\\n    color: white;\\n    font-family: 'ABeeZee', Serif;\\n\\n    @media (min-width < \", \") {\\n\\n    }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    font-size: 22pt;\\n    line-height: 100%;\\n    padding: 0;\\n    width: 50vw;\\n    display: inline-block;\\n    grid-area: words;\\n\\n    @media (min-width < \", \") {\\n\\n    }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    font-size: \", \"pt;\\n    padding: 0;\\n    margin: 0;\\n    transition: font-size 0.5s;\\n    width: 1.5vw\\n    text-align: center;\\n\\n    @media (min-width < \", \") {\\n\\n    }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    color: white;\\n    font-family: 'ABeeZee', Serif;\\n    padding: 0;\\n    width: 10vw;\\n    text-align: left;\\n    grid-area: toggle;\\n    cursor: pointer;\\n    display: flex;\\n    align-self: center;\\n\\n    @media (min-width < \", \") {\\n\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    height: 100vh;\\n    width: auto;\\n    float: right;\\n\\n    @media (min-width < \", \") {\\n\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    background-color: #0D1836;\\n    width: 100vw;\\n    height: 100vh;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport cut from \"./assets/cut.svg\";\n/*\nUse this to pull all photos from a folder, and make an array from them\nfunction importAll(r) {\n    return r.keys().map(r);\n}\nconst images = importAll(require.context('./assets/photos/', false, /\\.(png|jpe?g|svg)$/));\n*/\n\nvar maxWidth = 300;\nvar BackgroundDiv = styled.div(_templateObject());\nvar CutImage = styled.img(_templateObject2(), maxWidth);\nvar LangToggle = styled.div(_templateObject3(), maxWidth);\nvar LangP = styled.div(_templateObject4(), function (props) {\n  return props.size;\n}, maxWidth);\nvar Words = styled.div(_templateObject5(), maxWidth);\nvar InlinePara = styled.p(_templateObject6(), maxWidth);\nvar Grid = styled.div(_templateObject7(), maxWidth);\nvar LinkButton = styled.a(_templateObject8(), function (props) {\n  return props.area;\n}, maxWidth);\nvar ButtonGrid = styled.div(_templateObject9(), maxWidth);\nexport default function App() {\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      en = _useState2[0],\n      changeLang = _useState2[1];\n\n  var initState = window.navigator.language === 'en' ? 1 : 0;\n  console.log(initState);\n\n  var handleChange = function handleChange() {\n    return changeLang(!en) && console.log(en);\n  };\n\n  function isMobileDevice() {\n    return typeof window.orientation !== \"undefined\" || navigator.userAgent.indexOf('IEMobile') !== -1;\n  }\n\n  ;\n  return React.createElement(BackgroundDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(LangToggle, {\n    onClick: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(LangP, {\n    size: en ? 14 : 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"EN\"), React.createElement(LangP, {\n    size: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"|\"), React.createElement(LangP, {\n    size: en ? 12 : 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"FR\")), React.createElement(Words, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(InlinePara, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"u\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Alex\")), React.createElement(InlinePara, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, en ? \"Engineering\" : \"Ingénierie\", \".\"), React.createElement(InlinePara, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, en ? \"Strategy\" : \"Stratégie\", \".\"), React.createElement(InlinePara, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, en ? \"Mostly edible baking\" : \"Presque comestible pain\", \".\")), React.createElement(ButtonGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(LinkButton, {\n    href: 'https://linkedin.com/',\n    area: 'li',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Linkedin\"), React.createElement(LinkButton, {\n    href: 'https://github.com/amyer3',\n    area: 'gh',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Github\"), React.createElement(LinkButton, {\n    href: 'mailto:me@am.xyz?',\n    area: 'ct',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, en ? \"Contact\" : \"Contactez\"))), React.createElement(CutImage, {\n    src: cut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/Alex/WebstormProjects/am.xyz/frontend/src/App.js"],"names":["React","useState","styled","maxWidth","BackgroundDiv","div","CutImage","img","LangToggle","LangP","props","size","Words","InlinePara","p","Grid","LinkButton","a","area","ButtonGrid","App","en","changeLang","initState","window","navigator","language","console","log","handleChange","isMobileDevice","orientation","userAgent","indexOf","cut"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport styled from 'styled-components'\nimport cut from './assets/cut.svg'\n\n/*\nUse this to pull all photos from a folder, and make an array from them\nfunction importAll(r) {\n    return r.keys().map(r);\n}\nconst images = importAll(require.context('./assets/photos/', false, /\\.(png|jpe?g|svg)$/));\n*/\nconst maxWidth = 300;\n\nconst BackgroundDiv = styled.div`\n    background-color: #0D1836;\n    width: 100vw;\n    height: 100vh;\n`\nconst CutImage = styled.img`\n    height: 100vh;\n    width: auto;\n    float: right;\n\n    @media (min-width < ${maxWidth}) {\n\n    }\n`\nconst LangToggle = styled.div`\n    color: white;\n    font-family: 'ABeeZee', Serif;\n    padding: 0;\n    width: 10vw;\n    text-align: left;\n    grid-area: toggle;\n    cursor: pointer;\n    display: flex;\n    align-self: center;\n\n    @media (min-width < ${maxWidth}) {\n\n    }\n`\n\nconst LangP = styled.div`\n    font-size: ${props => props.size}pt;\n    padding: 0;\n    margin: 0;\n    transition: font-size 0.5s;\n    width: 1.5vw\n    text-align: center;\n\n    @media (min-width < ${maxWidth}) {\n\n    }\n`\n\nconst Words = styled.div`\n    font-size: 22pt;\n    line-height: 100%;\n    padding: 0;\n    width: 50vw;\n    display: inline-block;\n    grid-area: words;\n\n    @media (min-width < ${maxWidth}) {\n\n    }\n`\n\nconst InlinePara = styled.p`\n    font-size: 42pt;\n    padding: 0;\n    color: white;\n    font-family: 'ABeeZee', Serif;\n\n    @media (min-width < ${maxWidth}) {\n\n    }\n`\nconst Grid = styled.div`\n    display: inline-grid;\n    grid-template-columns: 10vw 45vw ;\n    grid-template-rows: 10vh 10vh 55vh 25vh;\n    grid-template-areas: \n    \"cs toggle\"\n    \"cs space\"\n    \"cs words\"\n    \"cs buttons\"\n\n    @media (min-width < ${maxWidth}) {\n\n    }\n`\nconst LinkButton = styled.a`\n    border: 3px solid white;\n    border-radius: 10px;\n    display: inline-block;\n    color: white;\n    background-color: transparent;\n    max-width: 200px;\n    max-height: 50px;\n    font-size: 26pt;\n    font-family: 'ABeeZee', Serif;\n    grid-area: ${props => props.area}\n    width: 100%;\n    text-align: center;\n    text-decoration: none;\n    outline: 0;\n    vertical-align: middle;\n    line-height: 50px;\n\n    @media (min-width < ${maxWidth}) {\n\n    }\n`\nconst ButtonGrid = styled.div`\n    display: grid;\n    margin: 0;\n    padding: 0;\n    grid-template-columns: 30% 5% 30% 5% 30%;\n    grid-template-rows: 50% 50%;\n    grid-template-areas:\n    \"li s1 gh s2 ct\"\n    \"map map map map map\";\n    grid-area: buttons;\n\n    @media (min-width < ${maxWidth}) {\n        grid-template-columns: 8% 38% 8% 38% 8%\n        grid-template-rows 50% 50%\n        grid-template-areas: \n        \"ls li cs gh rs\"\n        \"ls em cs wa rs\";\n\n    }\n`\n\nexport default function App() {\n    const [en, changeLang] = useState(1)\n\n    const initState = window.navigator.language === 'en' ? 1 : 0\n    console.log(initState)\n\n    var handleChange = () => changeLang(!en) && console.log(en)\n\n    function isMobileDevice() {\n        return (typeof window.orientation !== \"undefined\") || (navigator.userAgent.indexOf('IEMobile') !== -1);\n    };\n\n    return (\n        <BackgroundDiv>\n            <Grid>\n                <LangToggle onClick={handleChange}>\n                    <LangP size={en ? 14 : 12}>EN</LangP> \n                    <LangP size={14}>|</LangP>\n                    <LangP size={en ? 12 : 14}>FR</LangP>\n                </LangToggle>\n                <Words>\n                    <InlinePara><u>Alex</u></InlinePara>\n                    <InlinePara>{en ? \"Engineering\" : \"Ingénierie\"}.</InlinePara>\n                    <InlinePara>{en ? \"Strategy\" : \"Stratégie\"}.</InlinePara>\n                    <InlinePara>{en ? \"Mostly edible baking\" : \"Presque comestible pain\"}.</InlinePara>\n                </Words>\n                <ButtonGrid>\n                    <LinkButton href={'https://linkedin.com/'} area={'li'}>Linkedin</LinkButton>\n                    <LinkButton href={'https://github.com/amyer3'} area={'gh'}>Github</LinkButton>\n                    <LinkButton href={'mailto:me@am.xyz?'} area={'ct'}>{en ? \"Contact\" : \"Contactez\"}</LinkButton>\n                </ButtonGrid>\n            </Grid>\n            <CutImage src={cut} />\n        </BackgroundDiv>\n    )\n}"]},"metadata":{},"sourceType":"module"}